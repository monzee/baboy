#!/bin/bash
DIR=$(dirname $0)
SRC="$DIR/src"
TARGET="$DIR/target"

reverse_deps() {
    local search_path="$TARGET/$2"
    # r = recurse, h = don't print source file
    # s = don't echo permission denied/file not found messages
    grep -rhs --include=*.d $1 $search_path |
    while read -r line; do
        # proper dependency lists should include all transitive dependencies so
        # a single grep on all .d's should capture them all.
        echo "${line%:*}"
    done
}

indent() {
    sed 's/^/  /'
}

build() {
    echo "changed/new file: $path"
    local sped=($(reverse_deps "$2" $1))
    if [ $sped ]; then
        echo "rebuilding files depending on $file"
        make ${sped[@]} | indent
        echo "done."
    fi
}

echo "initializing dependency lists"
make init | indent

echo "recursively watching $SRC for changes"
inotifywait -rqme close_write $SRC | while read -r dir events file; do
    path=$dir$file
    case "$file" in
        *.less)
            rel="$SRC/less/"
            build css "$(realpath $path)"
            ;;

        *.js)
            target="$TARGET/js/$file"
            build js "${target#*/}"
            ;;

        *)
            echo "ignoring $file"
            ;;
    esac
done
