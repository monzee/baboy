#!/bin/bash
DIR=$(dirname $0)
SRC="$DIR/src"
TARGET="$DIR/target"

reverse_deps() {
    local search_path="$TARGET/$2"
    # r = recurse, h = don't print source file
    # s = don't echo permission denied/file not found messages
    grep -rhs --include=*.d $1 $search_path |
    while read -r line; do
        # proper dependency lists should include all transitive dependencies so
        # a single grep on all .d's should capture them all.
        echo "${line%:*}"
    done
}

indent() {
    sed 's/^/  /'
}

echo "initializing dependency lists"
for task in js-deps css-deps; do
    make $task | indent
done

echo "recursively watching $SRC for changes"

inotifywait -rqme close_write $SRC | while read -r dir events file; do
    path=$dir$file
    case "$file" in
        *.less)
            echo "changed/new file: $path"
            rel="$SRC/less/"
            make css from="${path#$rel}" | indent
            args=($(reverse_deps "$(realpath $path)" css))
            if [ $args ]; then
                echo "rebuilding files depending on $file"
                make ${args[@]} | indent
            fi
            ;;

        *.js)
            echo "changed/new file: $path"
            rel="$SRC/es6/"
            make js from="${path#$rel}" | indent
            args=($(reverse_deps "${path#*/}" js))
            if [ $args ]; then
                echo "rebuilding files depending on $file"
                make ${args[@]} | indent
            fi
            ;;

        *)
            echo "ignoring $file"
            ;;
    esac
done
